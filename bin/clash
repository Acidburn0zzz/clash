#! /usr/bin/env ruby

$LOAD_PATH.unshift(File.expand_path("../lib", File.dirname(__FILE__)))

require 'clash'
require 'clash/help'
require 'optparse'

options = {}

OptionParser.new do |opts|

  if ARGV.first == 'accept'
    options[:accept] = ARGV.shift
  end

  if ARGV.first == 'new' || ARGV.first == 'init'
    options[:new] = ARGV.shift

    opts.on("-f", "--force", "Overwrite existing content") do |f|
      options[:force] = f
    end
  end

  opts.banner = banner(options)

  if !options[:new] and !options[:accept]
    opts.on("-b", "--build", "Build mode: Runs only 'before' and 'build' actions") do |b|
      options[:build_only] = b
    end

    opts.on("-c", "--context NUMBER", Integer, "On diff errors, show NUMBER of lines of surrounding context (default: 2)") do |context|
      options[:context] = context
    end

    opts.on("-t", "--trace", "Display output while running tests") do |t|
      options[:trace] = t
    end

    opts.on("-l", "--list", "Print a list of tests' numbers and titles") do |l|
      options[:list] = l
    end
  end

  opts.on("-v", "--version", "Show version number") do |v|
    options[:version] = v
  end

  opts.on("-h", "--help", "Show this message") do |h|
    options[:help] = opts
  end

end.parse!

if options[:version]
  puts "Clash #{Clash::VERSION}"
  abort
end

if options[:help]
  IO.popen("less", "w") do |f| 
    f.puts options[:help]
    f.puts config_info
    if options[:accept]
      f.puts accept_examples
    elsif !options[:new]
      f.puts default_examples
    end
  end
elsif options[:new]
  Clash::Scaffold.new(ARGV, options)
else

  unless ARGV.empty?
    # Parse input `clash 1 2 3` and `clash 1,2,3` and `clash 1-3` the same
    #
    options[:dir]  = ARGV.shift if ARGV.first =~ /^[^\d:].+/
    options[:only] = ARGV
  end

  tests = Clash::Tests.new(options)

  if options[:list]
    tests.list
  elsif options[:accept]
    tests.accept
  else
    tests.run
  end
end
